
function phaseout = comparisonProblemContinuous(input)


t = input.phase.time;
x = input.phase.state;
wm = input.phase.control;
ft = 1;
fd = 1;
m = 1;
J = 1;
Wa = 1;
tau = 1; 
tau_d = 1;
Jm = 1;



xdot = [x(:,4), x(:,5), x(:,6), (x(:,12).*ft + fd), (x(:,15).*ft + fd), (x(:,18).*ft + fd), ((x(:,7)*x(:,7))+(Jm.*wm.*Wa)+tau+tau_d), ((x(:,8)*x(:,8))+(Jm.*wm.*Wa)+tau+tau_d), ((x(:,9)*x(:,9))+(Jm.*wm.*Wa)+tau+tau_d), ((x(:,11)*x(:,9))-(x(:,12)*x(:,8))), ((-x(:,10)*x(:,9))+(x(:,12)*x(:,7))), ((x(:,10)*x(:,8))-(x(:,11)*x(:,7))), ((x(:,14)*x(:,9))-(x(:,15)*x(:,8))), ((-x(:,13)*x(:,9))+(x(:,15)*x(:,7))), ((x(:,13)*x(:,8))-(x(:,14)*x(:,7))),((x(:,17)*x(:,9))-(x(:,18)*x(:,8))), ((-x(:,16)*x(:,9))+(x(:,18)*x(:,7))), ((x(:,16)*x(:,8))-(x(:,17)*x(:,7)))];
%xdot = [x(:,4), x(:,5), x(:,6), (x(:,12) + 1), (x(:,15) + 1), (x(:,18) + 1), ((x(:,7)*x(:,7))+(1)+1+1), ((x(:,8)*x(:,8))+(1)+1+1), ((x(:,9)*x(:,9))+(1)+1+1), ((x(:,11)*x(:,9))-(x(:,12)*x(:,8))), ((-x(:,10)*x(:,9))+(x(:,12)*x(:,7))), ((x(:,10)*x(:,8))-(x(:,11)*x(:,7))), ((x(:,14)*x(:,9))-(x(:,15)*x(:,8))), ((-x(:,13)*x(:,9))+(x(:,15)*x(:,7))), ((x(:,13)*x(:,8))-(x(:,14)*x(:,7))),((x(:,17)*x(:,9))-(x(:,18)*x(:,8))), ((-x(:,16)*x(:,9))+(x(:,18)*x(:,7))), ((x(:,16)*x(:,8))-(x(:,17)*x(:,7)))];

phaseout.dynamics = xdot;
phaseout.integrand = x(:,1).^2 +x(:,2).^2 + x(:,3).^2 + wm.^2  ;

